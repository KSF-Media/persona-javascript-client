/**
 * Persona
 * KSF Media unified login service
 *
 * The version of the OpenAPI document: 1.3.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 4.0.1-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/ForgotPasswordData', 'model/InlineResponse400', 'model/InlineResponse415', 'model/UpdatePasswordData'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/ForgotPasswordData'), require('../model/InlineResponse400'), require('../model/InlineResponse415'), require('../model/UpdatePasswordData'));
  } else {
    // Browser globals (root is window)
    if (!root.Persona) {
      root.Persona = {};
    }
    root.Persona.AccountApi = factory(root.Persona.ApiClient, root.Persona.ForgotPasswordData, root.Persona.InlineResponse400, root.Persona.InlineResponse415, root.Persona.UpdatePasswordData);
  }
}(this, function(ApiClient, ForgotPasswordData, InlineResponse400, InlineResponse415, UpdatePasswordData) {
  'use strict';

  /**
   * Account service.
   * @module api/AccountApi
   * @version 1.3.0
   */

  /**
   * Constructs a new AccountApi. 
   * @alias module:api/AccountApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the accountPasswordForgotGet operation.
     * @callback module:api/AccountApi~accountPasswordForgotGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<Object>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Request password reset link
     * @param {String} email 
     * @param {Object} opts Optional parameters
     * @param {Boolean} opts.redir 
     * @param {module:api/AccountApi~accountPasswordForgotGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<Object>}
     */
    this.accountPasswordForgotGet = function(email, opts, callback) {
      opts = opts || {};
      var postBody = null;
      // verify the required parameter 'email' is set
      if (email === undefined || email === null) {
        throw new Error("Missing the required parameter 'email' when calling accountPasswordForgotGet");
      }

      var pathParams = {
      };
      var queryParams = {
        'email': email,
        'redir': opts['redir'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json;charset=utf-8'];
      var returnType = [Object];
      return this.apiClient.callApi(
        '/account/password/forgot', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the accountPasswordForgotPost operation.
     * @callback module:api/AccountApi~accountPasswordForgotPostCallback
     * @param {String} error Error message, if any.
     * @param {Array.<Object>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Request password reset link
     * @param {module:model/ForgotPasswordData} body 
     * @param {module:api/AccountApi~accountPasswordForgotPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<Object>}
     */
    this.accountPasswordForgotPost = function(body, callback) {
      var postBody = body;
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling accountPasswordForgotPost");
      }

      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json;charset=utf-8'];
      var accepts = ['application/json;charset=utf-8'];
      var returnType = [Object];
      return this.apiClient.callApi(
        '/account/password/forgot', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the accountPasswordResetPost operation.
     * @callback module:api/AccountApi~accountPasswordResetPostCallback
     * @param {String} error Error message, if any.
     * @param {Array.<Object>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Reset a forgotten password with a token
     * @param {module:model/UpdatePasswordData} body 
     * @param {module:api/AccountApi~accountPasswordResetPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<Object>}
     */
    this.accountPasswordResetPost = function(body, callback) {
      var postBody = body;
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling accountPasswordResetPost");
      }

      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json;charset=utf-8'];
      var accepts = ['application/json;charset=utf-8'];
      var returnType = [Object];
      return this.apiClient.callApi(
        '/account/password/reset', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }
  };

  return exports;
}));
