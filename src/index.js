/**
 * Persona
 * KSF Media unified login service
 *
 * OpenAPI spec version: 1.1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 3.1.2-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/ActiveDays', 'model/Address', 'model/Campaign', 'model/DescriptionFrequency', 'model/LoginData', 'model/LoginDataSSO', 'model/LoginDataSoMe', 'model/LoginResponse', 'model/ModelPackage', 'model/PackageDescription', 'model/PackageOffer', 'model/Paper', 'model/Product', 'model/Subscription', 'model/SubscriptionDates', 'model/User', 'api/LoginApi', 'api/UsersApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/ActiveDays'), require('./model/Address'), require('./model/Campaign'), require('./model/DescriptionFrequency'), require('./model/LoginData'), require('./model/LoginDataSSO'), require('./model/LoginDataSoMe'), require('./model/LoginResponse'), require('./model/ModelPackage'), require('./model/PackageDescription'), require('./model/PackageOffer'), require('./model/Paper'), require('./model/Product'), require('./model/Subscription'), require('./model/SubscriptionDates'), require('./model/User'), require('./api/LoginApi'), require('./api/UsersApi'));
  }
}(function(ApiClient, ActiveDays, Address, Campaign, DescriptionFrequency, LoginData, LoginDataSSO, LoginDataSoMe, LoginResponse, ModelPackage, PackageDescription, PackageOffer, Paper, Product, Subscription, SubscriptionDates, User, LoginApi, UsersApi) {
  'use strict';

  /**
   * KSF_Media_unified_login_service.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var Persona = require('index'); // See note below*.
   * var xxxSvc = new Persona.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new Persona.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new Persona.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new Persona.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 1.1.0
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The ActiveDays model constructor.
     * @property {module:model/ActiveDays}
     */
    ActiveDays: ActiveDays,
    /**
     * The Address model constructor.
     * @property {module:model/Address}
     */
    Address: Address,
    /**
     * The Campaign model constructor.
     * @property {module:model/Campaign}
     */
    Campaign: Campaign,
    /**
     * The DescriptionFrequency model constructor.
     * @property {module:model/DescriptionFrequency}
     */
    DescriptionFrequency: DescriptionFrequency,
    /**
     * The LoginData model constructor.
     * @property {module:model/LoginData}
     */
    LoginData: LoginData,
    /**
     * The LoginDataSSO model constructor.
     * @property {module:model/LoginDataSSO}
     */
    LoginDataSSO: LoginDataSSO,
    /**
     * The LoginDataSoMe model constructor.
     * @property {module:model/LoginDataSoMe}
     */
    LoginDataSoMe: LoginDataSoMe,
    /**
     * The LoginResponse model constructor.
     * @property {module:model/LoginResponse}
     */
    LoginResponse: LoginResponse,
    /**
     * The ModelPackage model constructor.
     * @property {module:model/ModelPackage}
     */
    ModelPackage: ModelPackage,
    /**
     * The PackageDescription model constructor.
     * @property {module:model/PackageDescription}
     */
    PackageDescription: PackageDescription,
    /**
     * The PackageOffer model constructor.
     * @property {module:model/PackageOffer}
     */
    PackageOffer: PackageOffer,
    /**
     * The Paper model constructor.
     * @property {module:model/Paper}
     */
    Paper: Paper,
    /**
     * The Product model constructor.
     * @property {module:model/Product}
     */
    Product: Product,
    /**
     * The Subscription model constructor.
     * @property {module:model/Subscription}
     */
    Subscription: Subscription,
    /**
     * The SubscriptionDates model constructor.
     * @property {module:model/SubscriptionDates}
     */
    SubscriptionDates: SubscriptionDates,
    /**
     * The User model constructor.
     * @property {module:model/User}
     */
    User: User,
    /**
     * The LoginApi service constructor.
     * @property {module:api/LoginApi}
     */
    LoginApi: LoginApi,
    /**
     * The UsersApi service constructor.
     * @property {module:api/UsersApi}
     */
    UsersApi: UsersApi
  };

  return exports;
}));
